@plugin '@tailwindcss/typography';

@layer base {
  .prose {
    --tw-prose-body: var(--color-foreground);
    --tw-prose-headings: var(--color-foreground);
    --tw-prose-links: var(--color-foreground);
    --tw-prose-bold: var(--color-foreground);
    --tw-prose-counters: var(--color-accent);
    --tw-prose-bullets: var(--color-accent);
    --tw-prose-hr: var(--color-border);
    --tw-prose-quotes: var(--color-foreground);
    --tw-prose-quote-borders: color-mix(in srgb, var(--color-accent) 50%, transparent);
    --tw-prose-captions: var(--color-foreground);
    --tw-prose-code: var(--color-foreground);
    --tw-prose-code-bg: color-mix(in srgb, var(--color-muted) 75%, transparent);
    --tw-prose-pre-code: var(--color-foreground);
    --tw-prose-pre-bg: var(--color-muted);
    --tw-prose-th-borders: var(--color-border);
    --tw-prose-td-borders: var(--color-border);
  }
  
  .prose :where(h2, h3, h4, h5, h6) {
    margin-bottom: 0.75rem;
  }
  
  .prose :where(h3) {
    font-style: italic;
  }
  
  .prose :where(a) {
    text-decoration: dashed;
    text-underline-offset: 8px;
  }
  
  .prose :where(a:hover) {
    color: var(--color-accent);
  }
  
  .prose :where(blockquote) {
    border-left-color: color-mix(in srgb, var(--color-accent) 50%, transparent);
    opacity: 0.8;
  }
  .prose :where(img) {
    margin-left: auto;
    margin-right: auto;
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
    border-width: 2px;
    border-color: var(--color-border);
    border-radius: 0.25rem;
  }
  
  .prose :where(code) {
    border-radius: 0.25rem;
    background-color: color-mix(in srgb, var(--color-muted) 75%, transparent);
    padding: 0.25rem;
  }
  
  .prose :where(code)::before, 
  .prose :where(code)::after {
    content: none;
  }
  
  .prose a {
    overflow-wrap: break-word;
  }
  
  .prose a:hover {
    color: var(--color-accent);
  }
  
  .prose thead th:first-child,
  .prose tbody td:first-child,
  .prose tfoot td:first-child {
    padding-inline-start: 0.5714286em !important;
  }
  
  .prose h2#table-of-contents {
    margin-bottom: 0.5rem;
  }
  
  .prose details {
    display: inline-block;
    cursor: pointer;
    color: var(--color-foreground);
    user-select: none;
  }
  
  .prose summary {
    outline-offset: 1px;
  }
  
  .prose summary:focus-visible {
    text-decoration: none;
    outline-width: 2px;
    outline-style: dashed;
    outline-color: var(--color-accent);
  }
  
  .prose h2#table-of-contents + p {
    display: none;
  }

  /* ===== Code Blocks & Syntax Highlighting ===== */
  pre:has(code) {
    border: 1px solid var(--color-border);
    border-radius: 0.375rem;
    box-shadow: var(--shadow-sm);
  }
  
  code,
  blockquote {
    word-wrap: break-word;
  }

  pre > code {
    white-space: pre;
    padding: 1rem;
    display: block;
    overflow-x: auto;
  }

  /* Apply Dark Theme with improved contrast (if multi-theme specified) */
  html[data-theme="dark"] pre:has(code),
  html[data-theme="dark"] pre:has(code) span {
    color: white !important; /* Ensure maximum contrast for code */
    background-color: var(--shiki-dark-bg, var(--color-muted)) !important;
    font-style: var(--shiki-dark-font-style, normal) !important;
    font-weight: var(--shiki-dark-font-weight, normal) !important;
    text-decoration: var(--shiki-dark-text-decoration, none) !important;
  }
  
  /* Enhanced code blocks in dark mode */
  html[data-theme="dark"] pre:has(code) {
    border: 1px solid rgba(249, 115, 22, 0.2);
    box-shadow: var(--glow);
  }
  
  /* Enhanced code block appearance */
  pre:has(code) {
    position: relative;
    margin: 1.5rem 0;
  }
  
  pre:has(code)::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: linear-gradient(
      to right,
      var(--color-primary),
      var(--color-accent)
    );
    border-radius: 2px 2px 0 0;
  }

  /* Enhanced dark mode heading styles with improved contrast */
  html[data-theme="dark"] .prose :where(h1, h2, h3, h4, h5, h6) {
    color: white; /* Pure white for maximum contrast */
    font-weight: 700;
    letter-spacing: 0.01em;
  }

  html[data-theme="dark"] .prose :where(h1, h2) {
    text-shadow: 0 0 10px rgba(var(--accent-rgb), 0.3);
  }

  html[data-theme="dark"] .prose :where(h2)::after {
    content: '';
    display: block;
    height: 1px;
    width: 100%;
    margin-top: 0.5rem;
    background: linear-gradient(90deg, 
      rgba(var(--accent-rgb), 0.5),
      rgba(var(--accent-rgb), 0.1),
      transparent
    );
  }

  html[data-theme="dark"] .prose :where(a) {
    color: var(--color-accent);
    text-decoration-color: rgba(var(--accent-rgb), 0.4);
    transition: all 0.2s ease;
  }

  html[data-theme="dark"] .prose :where(a:hover) {
    text-decoration-color: rgba(var(--accent-rgb), 0.8);
    text-shadow: 0 0 8px rgba(var(--accent-rgb), 0.3);
  }

  /* Enhanced dark mode blockquote styles with improved text contrast */
  html[data-theme="dark"] .prose :where(blockquote) {
    background-color: rgba(var(--accent-rgb), 0.05);
    border-left: 4px solid rgba(var(--accent-rgb), 0.5);
    padding: 1rem 1.5rem;
    border-radius: 0 0.25rem 0.25rem 0;
    box-shadow: var(--shadow-sm);
  }
  
  html[data-theme="dark"] .prose :where(blockquote p) {
    color: white;
    opacity: 0.9;
  }

  html[data-theme="dark"] .prose :where(blockquote p:first-of-type)::before,
  html[data-theme="dark"] .prose :where(blockquote p:last-of-type)::after {
    color: rgba(var(--accent-rgb), 0.8);
  }

  /* Enhanced dark mode table styles */
  html[data-theme="dark"] .prose :where(table) {
    border-collapse: separate;
    border-spacing: 0;
    width: 100%;
    box-shadow: var(--shadow-sm);
    overflow: hidden;
    border-radius: 0.375rem;
    border: 1px solid var(--color-border);
  }

  html[data-theme="dark"] .prose :where(thead) {
    background-color: rgba(var(--accent-rgb), 0.1);
  }

  html[data-theme="dark"] .prose :where(thead th) {
    color: white;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    padding: 0.75rem 1rem;
    vertical-align: bottom;
    border-bottom: 2px solid rgba(var(--accent-rgb), 0.4);
  }

  html[data-theme="dark"] .prose :where(tbody tr) {
    transition: background-color 0.2s ease;
  }

  html[data-theme="dark"] .prose :where(tbody tr:hover) {
    background-color: rgba(var(--accent-rgb), 0.05);
  }

  html[data-theme="dark"] .prose :where(tbody td) {
    padding: 0.75rem 1rem;
    border-top: 1px solid rgba(var(--accent-rgb), 0.1);
    color: white;
    opacity: 0.9;
  }

  /* Enhanced dark mode image styles */
  html[data-theme="dark"] .prose :where(img) {
    border: 1px solid rgba(var(--accent-rgb), 0.2);
    border-radius: 0.375rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.2), 0 2px 4px -1px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  html[data-theme="dark"] .prose :where(figure) {
    margin-top: 2rem;
    margin-bottom: 2rem;
  }

  html[data-theme="dark"] .prose :where(figcaption) {
    margin-top: 0.75rem;
    color: rgba(255, 255, 255, 0.9); /* Brighter text for better contrast */
    font-size: 0.875rem;
    font-style: italic;
    text-align: center;
  }

  html[data-theme="dark"] .prose :where(img:hover) {
    transform: translateY(-2px);
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.3), 0 4px 6px -2px rgba(0, 0, 0, 0.15);
  }

  /* Enhanced inline code contrast for dark mode */
  html[data-theme="dark"] .prose :where(code):not(pre code) {
    color: white; /* Brighter color for better readability */
    background-color: rgba(var(--accent-rgb), 0.15);
    padding: 0.2em 0.4em;
    border-radius: 4px;
    font-weight: 600;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  }

  /* Enhanced list item contrast for dark mode */
  html[data-theme="dark"] .prose :where(ul, ol) {
    color: white;
    opacity: 0.9;
  }
  
  html[data-theme="dark"] .prose :where(li)::marker {
    color: var(--color-accent);
  }
  
  html[data-theme="dark"] .prose :where(li p) {
    color: white;
    opacity: 0.9;
  }

  /* Enhanced paragraph contrast for dark mode */
  html[data-theme="dark"] .prose :where(p) {
    color: white;
    opacity: 0.9;
    line-height: 1.75;
  }
}
