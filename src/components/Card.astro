---
import { slugifyStr } from "@/utils/slugify";
import type { CollectionEntry } from "astro:content";
import Datetime from "./Datetime.astro";
import Tag from "./Tag.astro"; // Import the Tag component

export interface Props {
  href?: string;
  frontmatter: CollectionEntry<"blog">["data"];
  secHeading?: boolean;
  coverImage?: string;
}

const { href, frontmatter, secHeading = true, coverImage } = Astro.props;

const { title, pubDatetime, modDatetime, description, tags, ogImage } = frontmatter;

// Use passed coverImage or fallback to ogImage from frontmatter
const displayImage = coverImage || ogImage;
const imageSrc = typeof displayImage === 'string' ? displayImage : displayImage?.src;

const headerProps = {
  style: { viewTransitionName: slugifyStr(title) },
  class: "text-lg font-medium decoration-dashed hover:underline",
};

// 从标签生成随机颜色并返回完整CSS变量值
const getCardAccent = (title: string) => {
  const colors = ["primary", "secondary", "success", "info", "warning", "danger", "accent"];
  const hash = title.split("").reduce((acc, char) => char.charCodeAt(0) + acc, 0);
  const colorName = colors[hash % colors.length];
  return colorName;
};

---

<li class="my-2 rounded-xl p-4 relative overflow-hidden backdrop-blur-sm transition-all duration-300 
    hover:shadow-lg hover:shadow-accent/20 group bg-gradient-to-br from-muted/30 to-background 
    border border-border/40 hover:border-accent/50 card animate-fade-in">
  
  <div class={`absolute top-0 left-0 w-1 h-full accent-bar accent-${getCardAccent(title)}
    group-hover:scale-y-105 transition-all duration-500 group-hover:glow-sm z-50`}></div>
  
  <div class={`${imageSrc ? 'grid grid-cols-1 sm:grid-cols-[auto_1fr] min-h-0' : 'flex items-center min-h-[160px]'}`}>
    <!-- Cover Image Section -->
    {imageSrc && (
      <div class="w-full h-48 sm:w-40 sm:h-40 relative overflow-hidden rounded-xl group/image bg-gradient-to-br from-muted/20 to-muted/40 sm:ml-3">
        <!-- Loading placeholder -->
        <div class="absolute inset-0 bg-gradient-to-br from-muted/30 to-muted/60 animate-pulse"></div>
        
        <!-- Image overlay gradient -->
        <div class="absolute inset-0 bg-gradient-to-br from-transparent via-transparent to-black/10 z-10 opacity-0 group-hover/image:opacity-100 transition-opacity duration-300"></div>
        
        <!-- Shimmer effect -->
        <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white/10 to-transparent -skew-x-12 translate-x-[-200%] group-hover/image:translate-x-[200%] transition-transform duration-700 z-20"></div>
        
        <img 
          src={imageSrc} 
          alt={title}
          class="w-full h-full object-cover transition-all duration-500 group-hover:scale-110 group-hover:brightness-105 relative z-10"
          loading="lazy"
          onload="this.previousElementSibling?.previousElementSibling?.previousElementSibling?.classList.add('opacity-0')"
        />
        
        <!-- Corner accent -->
        <div class={`absolute top-2 right-2 w-3 h-3 rounded-full accent-${getCardAccent(title)} opacity-60 group-hover/image:opacity-100 transition-opacity duration-300 z-30 shadow-lg`}></div>
        
        <!-- Image overlay label -->
        <div class="absolute bottom-2 left-2 px-2 py-1 bg-black/60 backdrop-blur-sm rounded text-xs text-white/90 opacity-0 group-hover/image:opacity-100 transition-all duration-300 transform translate-y-2 group-hover/image:translate-y-0">
          封面
        </div>
        
        <!-- Image border highlight -->
        <div class="absolute inset-0 rounded-t-xl sm:rounded-l-xl sm:rounded-tr-none border border-white/10 group-hover/image:border-white/20 transition-colors duration-300 z-30"></div>
      </div>
    )}
    
    <!-- Content Section -->
    <div class={`relative z-10 ${imageSrc ? 'p-4 sm:p-6 flex items-center' : 'p-4 sm:p-6 sm:pl-9 w-full'}`}>
      <div class="w-full space-y-2 sm:space-y-3">
        <a
          href={href}
          class="inline-block text-base sm:text-lg font-medium text-accent decoration-dashed underline-offset-4 
            focus-visible:no-underline focus-visible:underline-offset-0 transition-all duration-300 
            group-hover:text-accent group-hover:scale-[1.02] transform origin-left"
        >        {
          secHeading ? (
            <h2 {...headerProps} class="group-hover:text-accent transition-colors duration-300 text-base sm:text-lg leading-tight">{title}</h2>
          ) : (
            <h3 {...headerProps} class="group-hover:text-accent transition-colors duration-300 text-base sm:text-lg leading-tight">{title}</h3>
          )
        }
      </a>
      
      <Datetime pubDatetime={pubDatetime} modDatetime={modDatetime} />
      <p class="text-sm sm:text-base text-foreground/90 group-hover:text-foreground transition-colors duration-300 line-clamp-2 sm:line-clamp-3">{description}</p>
      
      {tags && (
        <ul class="flex flex-wrap gap-1 sm:gap-2 mt-2">
          {tags.map(tag => (
            <Tag tag={slugifyStr(tag)} tagName={tag} />
          ))}
        </ul>
      )}
      </div>
    </div>
  </div>
</li>

<style>
  /* Card styles with enhanced animations */
  .card {
    position: relative;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  }
  
  .card::before {
    content: '';
    position: absolute;
    inset: 0;
    z-index: -1;
    background: radial-gradient(
      circle at top right,
      color-mix(in srgb, var(--color-accent) 10%, transparent),
      transparent 70%
    );
    opacity: 0;
    transition: opacity 0.5s ease;
    border-radius: inherit;
  }
  
  .card:hover::before {
    opacity: 1;
  }
  
  /* Cover Image Enhanced Styles */
  .group\/image {
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.05);
  }
  
  .group\/image:hover {
    box-shadow: 
      inset 0 0 0 1px rgba(255, 255, 255, 0.1),
      0 8px 32px rgba(0, 0, 0, 0.15);
  }
  
  /* Image filter effects */
  .group\/image img {
    filter: contrast(1.05) saturate(1.1);
  }
  
  .group\/image:hover img {
    filter: contrast(1.1) saturate(1.15) brightness(1.05);
  }
  
  /* Text clamping for mobile responsiveness */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Responsive improvements */
  @media (max-width: 640px) {
    .card {
      margin: 0.5rem 0;
    }
    
    /* Ensure mobile images don't get too tall */
    .group\/image {
      max-height: 200px;
    }
</style>
