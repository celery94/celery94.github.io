---
import IconHash from "@/assets/icons/IconHash.svg";
import { slugifyStr } from "@/utils/slugify";

export interface Props {
  tag: string;
  tagName: string;
  size?: "sm" | "lg";
}

const { tag, tagName, size = "sm" } = Astro.props;

// 生成一致的标签颜色
const getTagColor = (tag: string) => {
  const colors = ["primary", "secondary", "success", "info", "warning", "danger", "accent"];
  const hash = tag.split("").reduce((acc, char) => char.charCodeAt(0) + acc, 0);
  return colors[hash % colors.length];
};

const tagColor = getTagColor(tag);
---

<li
  class:list={[
    "group inline-block group-hover:cursor-pointer",
    size === "sm" ? "my-1 underline-offset-4" : "mx-1 my-3 underline-offset-8",
  ]}
>
  <a
    href={`/tags/${tag}/`}
    transition:name={tag}
    class:list={[
      "relative pr-2 underline decoration-dashed hover:no-underline focus-visible:p-1",
      { "text-sm": size === "sm" },
      { "text-base": size === "lg" },
    ]}
  >
    <span class={`tag-${tagColor} tag px-3 py-1 rounded-full transition-all duration-200 hover:shadow-md hover:-translate-y-0.5`}>
      <IconHash
        class:list={[
          "inline-block",
          { "size-3 mr-1": size === "sm" },
          { "size-4 mr-1.5": size === "lg" },
        ]}
      />
      <span>{tagName}</span>
    </span>
  </a>
</li>

<style define:vars={{ tagColor }}>
  .tag-primary { background-color: var(--color-primary); color: var(--color-background); }
  .tag-secondary { background-color: var(--color-secondary); color: var(--color-background); }
  .tag-success { background-color: var(--color-success); color: var(--color-background); }
  .tag-info { background-color: var(--color-info); color: var(--color-background); }
  .tag-warning { background-color: var(--color-warning); color: var(--color-background); }
  .tag-danger { background-color: var(--color-danger); color: var(--color-background); }
  .tag-accent { background-color: var(--color-accent); color: var(--color-background); }
</style>
