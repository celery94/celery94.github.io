---
import { render, type CollectionEntry } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import Tag from "@/components/Tag.astro";
import Datetime from "@/components/Datetime.astro";
import EditPost from "@/components/EditPost.astro";
import ShareLinks from "@/components/ShareLinks.astro";
import BackButton from "@/components/BackButton.astro";
import { slugifyStr } from "@/utils/slugify";
import IconChevronLeft from "@/assets/icons/IconChevronLeft.svg";
import IconChevronRight from "@/assets/icons/IconChevronRight.svg";
import { SITE } from "@/config";

export interface Props {
  post: CollectionEntry<"blog">;
  posts: CollectionEntry<"blog">[];
}

const { post, posts } = Astro.props;

const {
  title,
  author,
  description,
  ogImage: initOgImage,
  canonicalURL,
  pubDatetime,
  modDatetime,
  tags,
  editPost,
} = post.data;

const { Content } = await render(post);

let ogImageUrl: string | undefined;

// Determine OG image source
if (typeof initOgImage === "string") {
  ogImageUrl = initOgImage; // Remote OG image (absolute URL)
} else if (initOgImage?.src) {
  ogImageUrl = initOgImage.src; // Local asset
}

// Use dynamic OG image if enabled and no remote|local ogImage
if (!ogImageUrl && SITE.dynamicOgImage) {
  ogImageUrl = `/posts/${slugifyStr(title)}/index.png`;
}

// Resolve OG image URL (or fallback to SITE.ogImage / default `og.png`)
const ogImage = ogImageUrl
  ? new URL(ogImageUrl, Astro.url.origin).href
  : undefined;

const layoutProps = {
  title: `${title} | ${SITE.title}`,
  author,
  description,
  pubDatetime,
  modDatetime,
  canonicalURL,
  ogImage,
  scrollSmooth: true,
};

/* ========== Prev/Next Posts ========== */

const allPosts = posts.map(({ data: { title }, id }) => ({
  slug: id,
  title,
}));

const currentPostIndex = allPosts.findIndex(a => a.slug === post.id);

const prevPost = currentPostIndex !== 0 ? allPosts[currentPostIndex - 1] : null;
const nextPost =
  currentPostIndex !== allPosts.length ? allPosts[currentPostIndex + 1] : null;
---

<Layout {...layoutProps}>
  <Header />
  <BackButton />
  <main
    id="main-content"
    class:list={[
      "mx-auto w-full max-w-5xl px-4 pb-12",
      { "mt-8": !SITE.showBackButton },
    ]}
    data-pagefind-body
  >
    <h1
      transition:name={slugifyStr(title)}
      class="inline-block text-2xl font-bold text-accent sm:text-3xl"
      style="text-shadow: 0 0 10px rgba(var(--accent-rgb, 0, 0, 0), 0.25);"
    >
      {title}
    </h1>
    <div class="flex items-center gap-4">
      <Datetime
        pubDatetime={pubDatetime}
        modDatetime={modDatetime}
        size="lg"
        class="my-2"
      />
      <EditPost class="max-sm:hidden" editPost={editPost} postId={post.id} />
    </div>
    <article id="article" class="mx-auto prose mt-8 max-w-5xl">
      <Content />
    </article>
    
    <style>
      /* Enhanced dark mode article styling */
      :global(html[data-theme="dark"] #article) {
        line-height: 1.8;
        letter-spacing: 0.01em;
        color-scheme: dark;
        font-weight: 350;
      }

      /* Improved dark mode paragraph styling */
      :global(html[data-theme="dark"] #article p) {
        color: rgba(255, 255, 255, 0.95);
        margin-bottom: 1.5em;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
      }

      /* Enhanced headings contrast and style */
      :global(html[data-theme="dark"] #article h1),
      :global(html[data-theme="dark"] #article h2),
      :global(html[data-theme="dark"] #article h3),
      :global(html[data-theme="dark"] #article h4) {
        color: white;
        letter-spacing: -0.01em;
        font-weight: 700;
        margin-top: 2rem;
        text-shadow: 0 0 10px rgba(var(--accent-rgb), 0.3);
      }

      /* Enhanced list styling */
      :global(html[data-theme="dark"] #article ul),
      :global(html[data-theme="dark"] #article ol) {
        padding-left: 1.5rem;
      }

      :global(html[data-theme="dark"] #article li) {
        color: rgba(255, 255, 255, 0.9);
        margin-bottom: 0.5em;
      }

      :global(html[data-theme="dark"] #article li::marker) {
        color: var(--color-accent);
      }

      /* Enhanced link styling */
      :global(html[data-theme="dark"] #article a) {
        color: var(--color-accent);
        text-decoration-color: rgba(var(--accent-rgb), 0.4);
        text-decoration-thickness: 1px;
        text-underline-offset: 2px;
        transition: all 0.2s ease;
      }

      :global(html[data-theme="dark"] #article a:hover) {
        text-decoration-color: var(--color-accent);
        text-decoration-thickness: 2px;
        text-shadow: 0 0 8px rgba(var(--accent-rgb), 0.5);
      }

      /* Enhanced blockquote styling */
      :global(html[data-theme="dark"] #article blockquote) {
        background-color: rgba(var(--accent-rgb), 0.08);
        border-left: 4px solid rgba(var(--accent-rgb), 0.6);
        padding: 1rem 1.5rem;
        border-radius: 0 0.25rem 0.25rem 0;
        font-style: italic;
        margin: 1.5rem 0;
        box-shadow: var(--shadow-sm);
      }

      :global(html[data-theme="dark"] #article blockquote p) {
        color: rgba(255, 255, 255, 0.95);
      }

      /* Enhanced code blocks */
      :global(#article pre) {
        border-radius: 0.75rem;
        margin: 2rem 0;
        padding: 0;
        overflow-x: auto;
        position: relative;
        font-family: 'JetBrains Mono', 'Fira Code', 'Cascadia Code', ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
        /* 自定义滚动条 */
        scrollbar-width: thin;
      }
      
      :global(html[data-theme="dark"] #article pre) {
        border: 1px solid rgba(55, 65, 81, 0.8);
        box-shadow: 
          0 10px 25px -5px rgba(0, 0, 0, 0.3),
          0 4px 6px -2px rgba(0, 0, 0, 0.1),
          inset 0 1px 0 rgba(255, 255, 255, 0.05);
        background: linear-gradient(145deg, #1a1b26 0%, #16161e 100%);
        scrollbar-color: #6366f1 #2a2e3a;
      }
      
      :global(html[data-theme="light"] #article pre) {
        border: 1px solid rgba(203, 213, 225, 0.8);
        box-shadow: 
          0 10px 25px -5px rgba(0, 0, 0, 0.1),
          0 4px 6px -2px rgba(0, 0, 0, 0.05),
          inset 0 1px 0 rgba(255, 255, 255, 0.9);
        background: linear-gradient(145deg, #f8fafc 0%, #f1f5f9 100%);
        scrollbar-color: #6366f1 #e2e8f0;
      }

      /* Webkit 滚动条样式 */
      :global(#article pre::-webkit-scrollbar) {
        height: 8px;
        width: 8px;
      }
      
      :global(html[data-theme="dark"] #article pre::-webkit-scrollbar-track) {
        background: #2a2e3a;
        border-radius: 4px;
      }
      
      :global(html[data-theme="dark"] #article pre::-webkit-scrollbar-thumb) {
        background: linear-gradient(90deg, #6366f1, #8b5cf6);
        border-radius: 4px;
        border: 1px solid #374151;
      }
      
      :global(html[data-theme="light"] #article pre::-webkit-scrollbar-track) {
        background: #e2e8f0;
        border-radius: 4px;
      }
      
      :global(html[data-theme="light"] #article pre::-webkit-scrollbar-thumb) {
        background: linear-gradient(90deg, #6366f1, #8b5cf6);
        border-radius: 4px;
        border: 1px solid #cbd5e1;
      }

      :global(#article pre code) {
        display: block;
        padding: 1.5rem;
        font-family: inherit;
        font-size: 0.875rem;
        line-height: 1.7;
        font-weight: 400;
        letter-spacing: 0.025em;
        background: transparent !important;
        border: none;
        outline: none;
      }

      :global(html[data-theme="dark"] #article pre code) {
        color: #e2e8f0;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
        background: transparent !important;
      }
      
      :global(html[data-theme="light"] #article pre code) {
        color: #334155;
        background: transparent !important;
      }

      /* 确保代码行没有单独的背景色 */
      :global(#article pre code .line) {
        background: transparent !important;
      }
      
      :global(#article pre code span) {
        background: transparent !important;
      }

      /* 最强力的代码背景覆盖 - 针对 Shiki night-owl 主题 */
      :global(#article pre),
      :global(#article pre *),
      :global(#article pre code),
      :global(#article pre code *),
      :global(#article pre span),
      :global(#article pre span *) {
        background: transparent !important;
        background-color: transparent !important;
        background-image: none !important;
      }

      /* 专门针对 Shiki 生成的元素 */
      :global(html[data-theme="dark"] #article pre .shiki),
      :global(html[data-theme="dark"] #article pre .shiki span),
      :global(html[data-theme="dark"] #article pre .shiki .line),
      :global(html[data-theme="dark"] #article pre .shiki code),
      :global(html[data-theme="dark"] #article pre .shiki code span),
      :global(html[data-theme="dark"] #article pre .astro-code),
      :global(html[data-theme="dark"] #article pre .astro-code span),
      :global(html[data-theme="dark"] #article pre .astro-code .line),
      :global(html[data-theme="dark"] #article pre .astro-code code),
      :global(html[data-theme="dark"] #article pre .astro-code code span) {
        background: transparent !important;
        background-color: transparent !important;
        background-image: none !important;
      }

      /* 覆盖所有可能的高亮元素 */
      :global(#article pre .token),
      :global(#article pre .keyword),
      :global(#article pre .string),
      :global(#article pre .number),
      :global(#article pre .comment),
      :global(#article pre .operator),
      :global(#article pre .punctuation),
      :global(#article pre .function),
      :global(#article pre .class-name),
      :global(#article pre .variable),
      :global(#article pre .property),
      :global(#article pre .selector),
      :global(#article pre .attr-name),
      :global(#article pre .attr-value),
      :global(#article pre .tag),
      :global(#article pre .highlight-line) {
        background: transparent !important;
        background-color: transparent !important;
        background-image: none !important;
      }

      /* JavaScript 运行时背景覆盖 */
      :global(#article pre *[style]) {
        background: transparent !important;
        background-color: transparent !important;
      }

      /* 使用 CSS 动画强制覆盖内联样式 */
      @keyframes removeBackground {
        to {
          background: transparent !important;
          background-color: transparent !important;
        }
      }

      :global(html[data-theme="dark"] #article pre span) {
        animation: removeBackground 0s forwards;
        background: transparent !important;
        background-color: transparent !important;
      }

      :global(html[data-theme="light"] #article pre span) {
        animation: removeBackground 0s forwards;
        background: transparent !important;
        background-color: transparent !important;
      }

      /* 内联代码样式 */
      :global(html[data-theme="dark"] #article code:not(pre code)) {
        color: #f1f5f9;
        background: linear-gradient(135deg, rgba(var(--accent-rgb), 0.2), rgba(var(--accent-rgb), 0.1));
        padding: 0.25rem 0.5rem;
        border-radius: 0.375rem;
        font-weight: 600;
        font-size: 0.875em;
        border: 1px solid rgba(var(--accent-rgb), 0.3);
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
      }
      
      :global(html[data-theme="light"] #article code:not(pre code)) {
        color: #dc2626;
        background: linear-gradient(135deg, rgba(220, 38, 38, 0.1), rgba(220, 38, 38, 0.05));
        padding: 0.25rem 0.5rem;
        border-radius: 0.375rem;
        font-weight: 600;
        font-size: 0.875em;
        border: 1px solid rgba(220, 38, 38, 0.2);
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
      }

      /* 代码块语言标签（如果存在） */
      :global(#article pre[class*="language-"])::before {
        content: attr(class);
        position: absolute;
        top: 0.75rem;
        right: 1rem;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        padding: 0.25rem 0.5rem;
        border-radius: 0.25rem;
        z-index: 10;
        pointer-events: none;
        opacity: 0.8;
      }
      
      :global(html[data-theme="dark"] #article pre[class*="language-"])::before {
        color: #a5b4fc;
        background: rgba(15, 23, 42, 0.9);
        border: 1px solid rgba(99, 102, 241, 0.3);
      }
      
      :global(html[data-theme="light"] #article pre[class*="language-"])::before {
        color: #6366f1;
        background: rgba(248, 250, 252, 0.9);
        border: 1px solid rgba(99, 102, 241, 0.2);
      }

      /* 代码块悬停效果 */
      :global(html[data-theme="dark"] #article pre:hover) {
        border-color: rgba(var(--accent-rgb), 0.4);
        box-shadow: 
          0 20px 35px -5px rgba(0, 0, 0, 0.4),
          0 10px 10px -5px rgba(0, 0, 0, 0.2),
          inset 0 1px 0 rgba(255, 255, 255, 0.1);
      }
      
      :global(html[data-theme="light"] #article pre:hover) {
        border-color: rgba(99, 102, 241, 0.3);
        box-shadow: 
          0 20px 35px -5px rgba(0, 0, 0, 0.15),
          0 10px 10px -5px rgba(0, 0, 0, 0.1),
          inset 0 1px 0 rgba(255, 255, 255, 1);
      }

      /* Enhanced table styling */
      :global(html[data-theme="dark"] #article table) {
        border-collapse: separate;
        border-spacing: 0;
        width: 100%;
        box-shadow: var(--shadow-sm);
        overflow: hidden;
        border-radius: 0.375rem;
        border: 1px solid var(--color-border);
        margin: 1.5rem 0;
      }

      :global(html[data-theme="dark"] #article thead) {
        background-color: rgba(var(--accent-rgb), 0.1);
      }

      :global(html[data-theme="dark"] #article th) {
        color: white;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        padding: 0.75rem 1rem;
        border-bottom: 2px solid rgba(var(--accent-rgb), 0.4);
      }

      :global(html[data-theme="dark"] #article td) {
        padding: 0.75rem 1rem;
        border-top: 1px solid rgba(var(--accent-rgb), 0.1);
        color: white;
        opacity: 0.9;
      }

      :global(html[data-theme="dark"] #article tbody tr:hover) {
        background-color: rgba(var(--accent-rgb), 0.05);
      }
    </style>

    <hr class="my-8 border-dashed" />

    <EditPost class="sm:hidden" editPost={editPost} postId={post.id} />

    <ul class="mt-4 mb-8 sm:my-8">
      {tags.map(tag => <Tag tag={slugifyStr(tag)} tagName={tag} />)}
    </ul>

    <div
      class="flex flex-col items-center justify-between gap-6 sm:flex-row sm:items-end sm:gap-4"
    >
      <ShareLinks />

      <button
        id="back-to-top"
        class="focus-outline py-1 whitespace-nowrap hover:opacity-75"
        style="transition: transform 0.3s ease, text-shadow 0.3s ease;"
      >
        <IconChevronLeft class="inline-block rotate-90" />
        <span>Back to Top</span>
      </button>
    </div>

    <hr class="my-6 border-dashed" />

    <!-- Previous/Next Post Buttons -->
    <div data-pagefind-ignore class="grid grid-cols-1 gap-6 sm:grid-cols-2">
      {
        prevPost && (
          <a
            href={`/posts/${prevPost.slug}`}
            class="flex w-full gap-1 hover:opacity-75 transition-all duration-300 hover:transform hover:-translate-x-1"
          >
            <IconChevronLeft class="inline-block flex-none" />
            <div>
              <span>Previous Post</span>
              <div class="text-sm text-accent/85">{prevPost.title}</div>
            </div>
          </a>
        )
      }
      {
        nextPost && (
          <a
            href={`/posts/${nextPost.slug}`}
            class="flex w-full justify-end gap-1 text-right hover:opacity-75 transition-all duration-300 hover:transform hover:translate-x-1 sm:col-start-2"
          >
            <div>
              <span>Next Post</span>
              <div class="text-sm text-accent/85">{nextPost.title}</div>
            </div>
            <IconChevronRight class="inline-block flex-none" />
          </a>
        )
      }
    </div>
  </main>
  <Footer />
</Layout>

<script is:inline data-astro-rerun>
  /** Create a progress indicator
   *  at the top */
  function createProgressBar() {
    // Create the main container div
    const progressContainer = document.createElement("div");
    progressContainer.className =
      "progress-container fixed top-0 z-10 h-1 w-full bg-background";

    // Create the progress bar div
    const progressBar = document.createElement("div");
    progressBar.className = "progress-bar h-1 w-0 bg-accent";
    progressBar.id = "myBar";

    // Append the progress bar to the progress container
    progressContainer.appendChild(progressBar);

    // Append the progress container to the document body or any other desired parent element
    document.body.appendChild(progressContainer);
  }
  createProgressBar();

  /** Update the progress bar
   *  when user scrolls */
  function updateScrollProgress() {
    document.addEventListener("scroll", () => {
      const winScroll =
        document.body.scrollTop || document.documentElement.scrollTop;
      const height =
        document.documentElement.scrollHeight -
        document.documentElement.clientHeight;
      const scrolled = (winScroll / height) * 100;
      if (document) {
        const myBar = document.getElementById("myBar");
        if (myBar) {
          myBar.style.width = scrolled + "%";
        }
      }
    });
  }
  updateScrollProgress();

  /** Attaches links to headings in the document,
   *  allowing sharing of sections easily */
  function addHeadingLinks() {
    const headings = Array.from(
      document.querySelectorAll("h2, h3, h4, h5, h6")
    );
    for (const heading of headings) {
      heading.classList.add("group");
      const link = document.createElement("a");
      link.className =
        "heading-link ml-2 opacity-0 group-hover:opacity-100 focus:opacity-100";
      link.href = "#" + heading.id;

      const span = document.createElement("span");
      span.ariaHidden = "true";
      span.innerText = "#";
      link.appendChild(span);
      heading.appendChild(link);
    }
  }
  addHeadingLinks();

  /** Attaches copy buttons to code blocks in the document,
   * allowing users to copy code easily. */
  function attachCopyButtons() {
    const copyButtonLabel = "Copy";
    const codeBlocks = Array.from(document.querySelectorAll("pre"));

    for (const codeBlock of codeBlocks) {
      // First create a wrapper with relative positioning
      const wrapper = document.createElement("div");
      wrapper.className = "relative"; // Using Tailwind v4 directly

      // Set the code block to be focusable
      codeBlock.setAttribute("tabindex", "0");
      
      // Wrap the code block with the relative parent element
      codeBlock?.parentNode?.insertBefore(wrapper, codeBlock);
      wrapper.appendChild(codeBlock);
      
      // Create and append the copy button to the wrapper (not the code block)
      const copyButton = document.createElement("button");
      copyButton.className =
        "absolute right-3 -top-3 rounded-md bg-zinc-700/90 hover:bg-zinc-600 px-2.5 py-1 text-xs font-medium text-white shadow-md transition-all duration-200 hover:scale-105 hover:shadow-lg";
      copyButton.innerHTML = copyButtonLabel;
      wrapper.appendChild(copyButton);

      copyButton.addEventListener("click", async () => {
        await copyCode(codeBlock, copyButton);
      });
    }

    async function copyCode(block, button) {
      const code = block.querySelector("code");
      const text = code?.innerText;

      await navigator.clipboard.writeText(text ?? "");

      // Visual feedback that task is completed
      button.innerText = "复制成功!";
      button.classList.add("bg-emerald-600"); 
      button.classList.add("scale-105");

      setTimeout(() => {
        button.innerText = copyButtonLabel;
        button.classList.remove("bg-emerald-600");
        button.classList.remove("scale-105");
      }, 1000);
    }
  }
  attachCopyButtons();

  /** Scrolls the document to the top when
   * the "Back to Top" button is clicked. */
  function backToTop() {
    document.querySelector("#back-to-top")?.addEventListener("click", () => {
      document.body.scrollTop = 0; // For Safari
      document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
    });
  }
  backToTop();

  /* Go to page start after page swap */
  document.addEventListener("astro:after-swap", () =>
    window.scrollTo({ left: 0, top: 0, behavior: "instant" })
  );
</script>
